@*@model PgLaw.Apresentacao.Web.App.Models.Processo.ProvidenciaVM*@

@using PGLaw.Infra.Cross.Common.Enums;

<!-- BEGIN FORM MODAL MARKUP -->
<div class="modal fade" id="modalProvidencia" tabindex="-1" role="dialog" aria-labelledby="formModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="formModalLabel">Criar Providência</h4>
            </div>
            @*@using (Ajax.BeginForm("Criar", "Providencia", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "successAjax", OnFailure = "errorAjax" }, new { @class = "form-horizontal form-validate" }))
            {*@
                @*@Html.HiddenFor(model => model.ProcessoId)*@
                <div class="modal-body">
                    <div class="form-group">
                        <div class="col-sm-3">
                            <label class="control-label">Prioridade</label>
                        </div>
                        <div class="col-sm-9">
                            <label class="radio-inline radio-styled radio-primary">
                                @*@Html.RadioButtonFor(model => model.Prioridade, Prioridade.Baixa)
                                <span>@Prioridade.Baixa.ToString()</span>*@
                            </label>
                            <label class="radio-inline radio-styled radio-warning">
                                @*@Html.RadioButtonFor(model => model.Prioridade, Prioridade.Media)
                                <span>@Prioridade.Media.ToString()</span>*@
                            </label>
                            <label class="radio-inline radio-styled radio-danger">
                                @*@Html.RadioButtonFor(model => model.Prioridade, Prioridade.Alta)
                                <span>@Prioridade.Alta.ToString()</span>*@
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            <label for="DataPrazo" class="control-label">Data do Prazo</label>
                        </div>
                        <div class="col-sm-5">
                            @*@Html.TextBoxFor(model => model.DataPrazoDate, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                            @Html.ValidationMessageFor(model => model.DataPrazoDate)*@
                        </div>
                        <div class="col-sm-4">
                            @*@Html.TextBoxFor(model => model.DataPrazoTime, "{0:hh}:{0:mm}", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DataPrazoTime)*@
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            <label for="TipoId" class="control-label">Tipo de Providência</label>
                        </div>
                        <div class="col-sm-9">
                            @*@Html.DropDownListFor(model => model.TipoId, (SelectList)ViewBag.SelectListItemTiposProvidencia, new { id = "tipo-providencia", @class = "src-atualizador form-control select2" })
                            @Html.ValidationMessageFor(model => model.TipoId)
                            @Html.HiddenFor(model => model.TipoDescricao, new { id = "tipo-providencia-texto", @class = "dest-atualizador" })*@
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            <label for="TipoId" class="control-label">Pessoa</label>
                        </div>
                        <div class="col-sm-9">
                            @*@Html.DropDownListFor(model => model.PessoaProvidenciaId, (SelectList)ViewBag.SelectListPessoasColigadosProvidencia, new { id = "pessoa-coligados-providencia", @class = "src-atualizador pessoas-providencia form-control hidden" })
                            @Html.DropDownListFor(model => model.PessoaProvidenciaId, (SelectList)ViewBag.SelectListPessoasEquipeProvidencia, new { id = "pessoa-equipe-providencia", @class = "src-atualizador pessoas-providencia form-control hidden" })
                            @Html.ValidationMessageFor(model => model.PessoaProvidenciaId)
                            @Html.HiddenFor(model => model.PessoaProvidencia, new { @class = "dest-atualizador", id = "pessoa-providencia-nome" })*@
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            <label for="Descricao" class="control-label">Descricão</label>
                        </div>
                        <div class="col-sm-9">
                            @*@Html.TextAreaFor(model => model.Descricao, new { @class = "form-control autosize", rows = "1", })
                            @Html.ValidationMessageFor(model => model.Descricao)*@
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cancel-modal" type="button" class="btn btn-default cancel-modal" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Adicionar</button>
                </div>
            @*}*@
        </div><!-- /.modal-content -->

    </div><!-- /.modal-dialog -->

</div><!-- /.modal -->
<!-- END FORM MODAL MARKUP -->

<script>

    function AtualizarPessoasParaProvidencia(tipo) {
        $('#pessoa-equipe-providencia :selected, #pessoa-coligados-providencia :selected').removeAttr('selected');

        console.log(tipo);

        if (tipo == "Equipe") {
            $('#pessoa-equipe-providencia').removeClass('disabled hidden');
            $('#pessoa-coligados-providencia').addClass('disabled hidden');
        }

        if (tipo == "Coligados") {
            $('#pessoa-coligados-providencia').removeClass('disabled hidden');
            $('#pessoa-equipe-providencia').addClass('disabled hidden');
        }
    };

    function ChangeTipo($select) {
        var tipo = $select.find('option:selected').parent().attr('label');

        if (tipo != null || tipo != '' || tipo != undefined) {
            AtualizarPessoasParaProvidencia(tipo);
        }
    }

    $(function () {
        $('#tipo-providencia').change(function () {
            ChangeTipo($(this));
            guardarTexto($(this), $('#tipo-providencia-texto'))
        });

        $('select[name="PessoaProvidenciaId"]').change(function () {
            guardarTexto($(this), $('#pessoa-providencia-nome'))
        })
    });

</script>