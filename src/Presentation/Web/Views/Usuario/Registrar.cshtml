@model PgLaw.Apresentacao.Web.App.Models.RegistrarVM
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@System.Configuration.ConfigurationManager.AppSettings["tituloGeral"]</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

    @Styles.Render("~/Content/lte/bootstrap/css")
    @Styles.Render("~/Content/lte/plugins/font-awesome/css")
    @Styles.Render("~/Content/lte/plugins/ionicons/css")
    @Styles.Render("~/Content/lte/dist/css")
    @Styles.Render("~/Content/lte/plugins/icheck/css/sqare/blue")

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body class="hold-transition login-page">
    <div class="login-box">
        <div class="login-logo">
            <a href="#">Registrar-se</a>
        </div>
        <div class="login-box-body">
            
            <p class="login-box-msg">Informe os dados abaixo para se registrar</p>

            @using (Html.BeginForm("Registrar", "Usuario", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                </div>
                <div class="form-group has-feedback">
                    @Html.PasswordFor(m => m.Senha, new { @class = "form-control", type = "password", placeholder = "Senha" })
                    @Html.ValidationMessageFor(m => m.Senha, "", new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                </div>
                <div class="form-group has-feedback">
                    @Html.PasswordFor(m => m.ConfirmacaoSenha, new { @class = "form-control", type = "password", placeholder = "Confirme sua senha" })
                    @Html.ValidationMessageFor(m => m.ConfirmacaoSenha, "", new { @class = "text-danger" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                </div>

                <div class="row">
                    <div class="col-xs-6 social-auth-links text-center">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Registrar</button>
                    </div>
                </div>
            }
            <a href="@Url.Action("Login", "Usuario")" class="text-center">Já tenho uma conta</a>

        </div>
    </div>

    @Scripts.Render("~/Content/lte/plugins/jquery/js")
    @Scripts.Render("~/Content/lte/bootstrap/js")
    @Scripts.Render("~/Content/lte/plugins/icheck/js")
    @Scripts.Render("~/Content/lte/plugins/jquery-validate/js")
    @Scripts.Render("~/Scripts/Account/Login")

</body>
</html>